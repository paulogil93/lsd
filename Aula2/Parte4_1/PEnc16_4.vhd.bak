library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity PEnc16_4 is
	port(decodedIn		:	in		std_logic_vector(15 downto 0);
		  encodedOut	:	out	std_logic_vector(3 downto 0);
		  validOut		:	out 	std_logic);
end PEnc16_4;

architecture Behavioral of PEnc16_4 is
begin
	process(decodedIn)
	begin
		
		if(decodedIn = "0000000000000001") then
			encodedOut <= "0000";
			validOut <= '1';
		elsif(decodedIn = "0000000000000010") then
			encodedOut <= "0001";
			validOut <= '1';
		elsif(decodedIn = "0000000000000100") then
			encodedOut <= "0010";
			validOut <= '1';
		elsif(decodedIn = "0000000000001000") then
			encodedOut <= "0011";
			validOut <= '1';
		elsif(decodedIn = "0000000000010000") then
			encodedOut <= "0100";
			validOut <= '1';
		elsif(decodedIn = "0000000000100000") then
			encodedOut <= "0101";
			validOut <= '1';
		elsif(decodedIn = "0000000001000000") then
			encodedOut <= "0110";
			validOut <= '1';
		elsif(decodedIn = "0000000010000000") then
			encodedOut <= "0111";
			validOut <= '1';
		elsif(decodedIn = "0000000100000000") then
			encodedOut <= "1000";
			validOut <= '1';
		elsif(decodedIn = "0000001000000000") then
			encodedOut <= "1001";
			validOut <= '1';
		elsif(decodedIn = "0000010000000000") then
			encodedOut <= "1010";
			validOut <= '1';
		elsif(decodedIn = "0000100000000000") then
			encodedOut <= "1011";
			validOut <= '1';
		elsif(decodedIn = "0001000000000000") then
			encodedOut <= "1100";
			validOut <= '1';
		elsif(decodedIn = "0010000000000000") then
			encodedOut <= "1101";
			validOut <= '1';
		elsif(decodedIn = "0100000000000000") then
			encodedOut <= "1110";
			validOut <= '1';
		elsif(decodedIn = "1000000000000000") then
			encodedOut <= "1111";
			validOut <= '1';
		else
			encodedOut <= "0000";
			validOut <= '0';
		end if;
		
	end process;
	
end Behavioral;